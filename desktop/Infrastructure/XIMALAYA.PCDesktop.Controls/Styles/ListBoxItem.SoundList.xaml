<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:tools="http://ximalaya.com/xaml/tools"
                    xmlns:converter="http://ximalaya.com/xaml/tools/converter"
                    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:MControls="clr-namespace:XIMALAYA.PCDesktop.Controls">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/XIMALAYA.PCDesktop.Controls;component/Styles/Converter.xaml" />
		<ResourceDictionary Source="pack://application:,,,/XIMALAYA.PCDesktop.Controls;component/Styles/ListBoxItem.Common.xaml" />
		<ResourceDictionary Source="pack://application:,,,/XIMALAYA.PCDesktop.Controls;component/Styles/MyCheckboxButton.xaml" />
		<ResourceDictionary Source="pack://application:,,,/XIMALAYA.PCDesktop.Controls;component/Styles/Path.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<!--默认声音列表样式 start-->

	<DataTemplate x:Key="NormalSoundItemTemplate" DataType="{x:Type ListBoxItem}">
		<MControls:MyRadioButton Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}, Path=Width}"
                                 Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}, Path=Height}"
					             Background="Transparent"
								 GroupName="SearchAlbum"
					             BorderThickness="0 0 0 1"
								 CheckedBorderThickness="0 0 0 1"
								 IsChecked="False"
								 SuperScriptSize="0"
					             BorderBrush="{DynamicResource BlackBrush}"
								 Command="{Binding ShowSoundDetailCommand,Source={x:Static tools:CommandSingleton.Instance}}"
								 CommandParameter="{Binding TrackId}">
			<Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox},Converter={StaticResource ActualSizeFixedConverter},ConverterParameter='-,15'}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<!--播放按钮-->
				<MControls:MyToggleButton Width="20" 
								          Height="20"
									      Margin="5"
										  Padding="0"
									      IsSingle="True"
								          BorderType="Ellipse"
										  BorderThickness="1"
								          Foreground="{DynamicResource WhiteBrush}"
								          Background="{DynamicResource BlackBrush}"
								          BorderBrush="{DynamicResource BlackBrush}">
					<MControls:MyToggleButton.Content>
						<Path Data="{Binding ToolbarPlayPath, Source={x:Static MControls:PathData.Instance}}" 
						      Style="{DynamicResource PathStyle}"
						      Width="10"
						      Height="10"
						      Margin="3 0 0 0"
						      Fill="{Binding ForegroundChecked,RelativeSource={RelativeSource AncestorType={x:Type MControls:MyToggleButton}}}" />
					</MControls:MyToggleButton.Content>
					<MControls:MyToggleButton.ContentChecked>
						<Path Data="{Binding ToolbarPausePath, Source={x:Static MControls:PathData.Instance}}"
						      Style="{DynamicResource PathStyle}"
						      Width="10"
						      Height="10"
						      Fill="{Binding ForegroundChecked,RelativeSource={RelativeSource AncestorType={x:Type MControls:MyToggleButton}}}" />
					</MControls:MyToggleButton.ContentChecked>
					<MControls:MyToggleButton.IsChecked>
						<MultiBinding Converter="{StaticResource MutiBoolConverter}" ConverterParameter="0" Mode="OneWay">
							<MultiBinding.Bindings>
								<Binding Path="BassEngine.IsPlaying" Source="{x:Static tools:CommandSingleton.Instance}" />
								<Binding Path="TrackId"/>
								<Binding Path="SoundData.TrackId" Source="{x:Static tools:CommandSingleton.Instance}"/>
							</MultiBinding.Bindings>
						</MultiBinding>
					</MControls:MyToggleButton.IsChecked>
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Click">
							<i:InvokeCommandAction Command="{Binding PlaySound1Command,Source={x:Static tools:CommandSingleton.Instance}}" 
											       CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}}">
							</i:InvokeCommandAction>
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</MControls:MyToggleButton>
				<!--声音信息-->
				<Grid Grid.Column="1" 
					  ClipToBounds="True">
					<Grid.RowDefinitions>
						<RowDefinition Height="*"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<!--声音标题-->
					<TextBlock Text="{Binding Title}"
							   ToolTip="{Binding Binding Title}"
							   Foreground="{DynamicResource BlackBrush}"
							   TextWrapping="NoWrap"
							   TextOptions.TextRenderingMode="Grayscale"
							   HorizontalAlignment="Stretch"
							   VerticalAlignment="Center"/>

					<!--用户名-->
					<Label Grid.Row="1" 
						   FontSize="10" 
						   Foreground="{DynamicResource GrayBrush7}"
						   HorizontalAlignment="Left" 
						   ContentStringFormat="by {0}"
						   Content="{Binding NickName}" />
					<!--创建时间-->
					<Label Grid.Row="1" 
						   FontSize="10" 
						   Foreground="{DynamicResource GrayBrush7}"
						   HorizontalAlignment="Right" 
						   Content="{Binding CreateAt,Converter={StaticResource NickTimeConverter}}" />
				</Grid>
				<!--声音图片-->
				<MControls:MyImage Grid.Column="2"
						           Margin="5"
						           VerticalAlignment="Center"
						           Width="50" 
						           Height="50" 
						           Source="{Binding CoverSmall}"
						           DefaultSource="track.jpg"/>
			</Grid>
		</MControls:MyRadioButton>
	</DataTemplate>
	<Style x:Key="NormalSoundItemStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListItemBaseTemp}">
		<Setter Property="ContentTemplate" Value="{StaticResource NormalSoundItemTemplate}"/>
	</Style>

	<!--默认声音列表样式 end-->

	<!--当前播放列表 start-->

	<DataTemplate x:Key="PlayingListStyleItemTemplate" DataType="{x:Type ListBoxItem}">
		<MControls:MyCheckboxButton CommandParameter="{Binding TrackId}"
								    Command="{Binding PlaySoundCommand,Source={x:Static tools:CommandSingleton.Instance}}"
								    Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}, Path=ActualHeight}"
								    Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}, Path=ActualWidth}"
								    IconData="{Binding ToolbarPlayPath,Source={x:Static MControls:PathData.Instance}}"
								    Style="{StaticResource MetroMyToggleButton}"
								    BorderBrush="{DynamicResource AccentColorBrush}"
								    IconMargin="2"
								    Background="{DynamicResource WhiteBrush}"
								    CheckedBorderThickness="1"
								    SuperScriptSize="35"
                                    BorderThickness="1">
			<MControls:MyCheckboxButton.IsChecked>
				<MultiBinding Converter="{StaticResource MutiBoolConverter}"  ConverterParameter="0" Mode="OneWay">
					<MultiBinding.Bindings>
						<Binding Path="BassEngine.IsPlaying" Source="{x:Static tools:CommandSingleton.Instance}" />
						<Binding Path="TrackId"/>
						<Binding Path="SoundData.TrackId" Source="{x:Static tools:CommandSingleton.Instance}"/>
					</MultiBinding.Bindings>
				</MultiBinding>
			</MControls:MyCheckboxButton.IsChecked>
			<MControls:MyCheckboxButton.Content>
				<Grid ToolTip="{Binding Title}"  
					  Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}, Path=ActualWidth}">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<!--<ColumnDefinition Width="Auto"/>-->
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>

					<TextBlock Grid.Column="0" Margin="5 0" Text="{Binding Title}"/>
					<!--<TextBlock Grid.Column="1" Margin="5 0" Text="{Binding NickName}"/>-->
					<TextBlock Grid.Column="2" Margin="5 0" Text="{Binding Duration,Converter={StaticResource TimeSpanConverter},ConverterParameter=1}"/>

				</Grid>
			</MControls:MyCheckboxButton.Content>
		</MControls:MyCheckboxButton>
	</DataTemplate>
	<Style x:Key="PlayingListStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListItemBaseTemp}">
		<Setter Property="ContentTemplate" Value="{StaticResource PlayingListStyleItemTemplate}"/>
	</Style>

	<!--当前播放列表 end-->
</ResourceDictionary>