<UserControl x:Class="XIMALAYA.PCDesktop.Modules.MusicPlayer.Views.MusicPlayerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:MControls="http://ximalaya.com/xaml/controls"
             xmlns:converter="http://ximalaya.com/xaml/tools/converter"
			 xmlns:tools="http://ximalaya.com/xaml/tools"
             xmlns:sound="clr-namespace:WPFSoundVisualizationLib;assembly=WPFSoundVisualizationLib">

	<UserControl.Resources>
		<ResourceDictionary>
			<converter:TimeSpanToDoubleConverter x:Key="TimeSpanToDoubleConverter"/>
			<converter:TimeSpanConverter x:Key="TimeSpanConverter"/>
			<BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
			<converter:ToTransparentColorConverter x:Key="ToTransparentColorConverter"/>
			<converter:MutiBoolConverter x:Key="MutiBoolConverter" />
			<converter:PercentConverter x:Key="PercentConverter" />

			<Storyboard x:Key="OnVolumeControlMouseEnter">
				<DoubleAnimation Duration="0:0:0.2" 
								 Storyboard.TargetName="BdVolumeControl"
								 Storyboard.TargetProperty="(FrameworkElement.Width)" To="104">
					<DoubleAnimation.EasingFunction>
						<CircleEase/>
					</DoubleAnimation.EasingFunction>
				</DoubleAnimation>
			</Storyboard>
			<Storyboard x:Key="OnVolumeControlMouseLeave">
				<DoubleAnimation Duration="0:0:0.1" 
								 Storyboard.TargetName="BdVolumeControl"
								 Storyboard.TargetProperty="(FrameworkElement.Width)" To="30">
					<DoubleAnimation.EasingFunction>
						<CircleEase/>
					</DoubleAnimation.EasingFunction>
				</DoubleAnimation>
			</Storyboard>

		</ResourceDictionary>
	</UserControl.Resources>

	<UserControl.Triggers>
		<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="BdVolumeControl">
			<BeginStoryboard x:Name="OnVolumeControlMouseEnter_BeginStoryboard" Storyboard="{StaticResource OnVolumeControlMouseEnter}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="BdVolumeControl">
			<BeginStoryboard x:Name="OnVolumeControlMouseLeave_BeginStoryboard" Storyboard="{StaticResource OnVolumeControlMouseLeave}"/>
		</EventTrigger>
	</UserControl.Triggers>

	
	<Grid ClipToBounds="False"
		  Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Canvas}}">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="40"/>
		</Grid.RowDefinitions>

		<!--波形条-->
		<Grid x:Name="SpectrumPanel" 
			  Height="50"
			  Grid.Row="1"
			  Margin="0" 
			  VerticalAlignment="Bottom" 
			  Opacity="0.4">
			<Grid.Effect>
				<BlurEffect Radius="7"/>
			</Grid.Effect>
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<Rectangle RenderTransformOrigin="0.5,0.5">
				<Rectangle.RenderTransform>
					<ScaleTransform ScaleX="-1"/>
				</Rectangle.RenderTransform>
				<Rectangle.Fill>
					<VisualBrush Visual="{Binding ElementName=SpectrumAnalyzer}" Stretch="None" AlignmentX="Left" AlignmentY="Bottom"/>
				</Rectangle.Fill>
			</Rectangle>
			<sound:SpectrumAnalyzer x:Name="SpectrumAnalyzer" 
									Grid.Column="1" 
									BarSpacing="0" 
									PeakStyle="{x:Null}" 
									IsFrequencyScaleLinear="True" 
									AveragePeaks="True">
				<sound:SpectrumAnalyzer.BarStyle>
					<Style TargetType="{x:Type Rectangle}">
						<Setter Property="Fill">
							<Setter.Value>
								<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" x:Name="BarBrush">
									<GradientStop Color="{Binding (GradientBrush.GradientStops)[1].Color, Converter={StaticResource ToTransparentColorConverter}, RelativeSource={RelativeSource AncestorType={x:Type LinearGradientBrush}}}" Offset="0"/>
									<GradientStop Color="{DynamicResource BlackColor}" Offset="0.7"/>
								</LinearGradientBrush>
							</Setter.Value>
						</Setter>
					</Style>
				</sound:SpectrumAnalyzer.BarStyle>
			</sound:SpectrumAnalyzer>
		</Grid>
		<!--播放进度条-->
		<Grid Grid.Row="0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			
			<!--当前播放时间-->
			<TextBlock Grid.Column="0"
					   Margin="2 0"
					   HorizontalAlignment="Center" 
					   VerticalAlignment="Center"
					   Text="{Binding TotalTimeSpan,ElementName=metroSlider,Converter={StaticResource TimeSpanConverter}}"/>
			<!--播放进度条-->
			<MControls:MetroSlider Grid.Column="1"
								   x:Name="metroSlider"
                                   Minimum="0"
								   Height="10"
                                   Maximum="{Binding RelativeSource={RelativeSource Self},Path=Duration}"
                                   ThumbBackground="{DynamicResource WhiteColorBrush}"
                                   ThumbForeground="{DynamicResource AccentColorBrush}"
                                   TrackBackgroundBack="{DynamicResource GrayBrush9}"
                                   TrackBackgroundFront="{DynamicResource GrayBrush2}"
                                   TotalTimeSpan="{Binding RelativeSource={RelativeSource Self},Path=Value}"
                                   Duration="{Binding BassEngine.TotalTime,Converter={StaticResource TimeSpanToDoubleConverter},Source={x:Static tools:GlobalDataSingleton.Instance}}"
                                   Value="{Binding BassEngine.CurrentTime,Converter={StaticResource TimeSpanToDoubleConverter},Source={x:Static tools:GlobalDataSingleton.Instance}}"
                                   Process="{Binding BassEngine.Process,Source={x:Static tools:GlobalDataSingleton.Instance}}"
								   Margin="3 0"
                                   LargeChange="5000"
                                   SmallChange="1000">
			</MControls:MetroSlider>
			<!--总时长-->
			<TextBlock Grid.Column="2"
					   Margin="2 0"
					   HorizontalAlignment="Center" 
					   VerticalAlignment="Center"
					   Text="{Binding Duration,ElementName=metroSlider,Converter={StaticResource TimeSpanConverter}}"/>
		</Grid>
		<!--信息和操作-->
		<Grid Grid.Row="1">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<!--声音图片-->
			<MControls:MyImage Grid.Column="0"
							   Margin="5"
							   VerticalAlignment="Center"
							   Width="32" 
							   Height="32" 
							   Source="{Binding SoundData.CoverSmall,Source={x:Static tools:GlobalDataSingleton.Instance}}"
							   DefaultSource="track.jpg"/>
			<!--声音标题-->
			<TextBlock Grid.Column="1"
					   TextWrapping="Wrap"
					   FontSize="14"
					   ToolTip="{Binding Text,RelativeSource={RelativeSource Self}}"
					   Text="{Binding SoundData.Title,Source={x:Static tools:GlobalDataSingleton.Instance}}" 
					   VerticalAlignment="Center"/>
			<!--分享条-->
			<MControls:SharePanel Grid.Column="2"
								  Margin="2 0">
				<MControls:SharePanel.DataContext>
					<Binding Path="SoundData" Source="{x:Static tools:GlobalDataSingleton.Instance}"/>
				</MControls:SharePanel.DataContext>
			</MControls:SharePanel>
			<!--音量控制-->
			<StackPanel Grid.Column="3"
						x:Name="BdVolumeControl" 
						Width="30" 
						Margin="2 0"
						Background="Transparent" 
						Orientation="Horizontal">
				<!--静音-->
				<MControls:MyToggleButton Width="30" 
										  Height="30"
										  IsChecked="{Binding BassEngine.IsMuted,Mode=TwoWay,Source={x:Static tools:GlobalDataSingleton.Instance}}"
										  BorderType="Ellipse">
					<MControls:MyToggleButton.Content>
						<Label Background="Transparent" ToolTip="静音">
							<Path Data="{Binding [volume], Source={x:Static MControls:PathData.Instance}}" 
								  Style="{StaticResource PathStyle}"
								  Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type MControls:MyToggleButton}}}" >
							</Path>
						</Label>
					</MControls:MyToggleButton.Content>
					<MControls:MyToggleButton.ContentChecked>
						<Label Background="Transparent" ToolTip="恢复">
							<Path Data="{Binding [muted], Source={x:Static MControls:PathData.Instance}}" 
								  Style="{StaticResource PathStyle}"
								  Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type MControls:MyToggleButton}}}" >
							</Path>
						</Label>
					</MControls:MyToggleButton.ContentChecked>
				</MControls:MyToggleButton>
				<!--音量条-->
				<Slider x:Name="volumeSlider"
						Width="70" 
						Margin="2"
						Height="5"
						Maximum="1"
						Minimum="0"
						LargeChange="0.2"
						SmallChange="0.1"
						ToolTip="{Binding Value,RelativeSource={RelativeSource Self},Converter={StaticResource PercentConverter}}"
						BorderBrush="{DynamicResource GrayBrush8}"
						Foreground="{DynamicResource BlackBrush}"
						Value="{Binding BassEngine.Volume,Source={x:Static tools:GlobalDataSingleton.Instance}}"
						Style="{DynamicResource FlatSlider}" />
			</StackPanel>
			<!--上一首-->
			<MControls:MyToggleButton Grid.Column="4"
									  Width="30" 
								      Height="30"
									  Margin="2 0"
								      BorderType="Ellipse"
									  ToolTip="上一首"
									  Command="{Binding PrevCommand,Source={x:Static tools:CommandSingleton.Instance}}">
				<MControls:MyToggleButton.Content>
					<Path Data="{Binding [prev], Source={x:Static MControls:PathData.Instance}}" 
						  Style="{StaticResource PathStyle}"
						  Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type MControls:MyToggleButton}}}" >
					</Path>
				</MControls:MyToggleButton.Content>
				<MControls:MyToggleButton.ContentChecked>
					<Path Data="{Binding [prev], Source={x:Static MControls:PathData.Instance}}"
						  Style="{StaticResource PathStyle}"
						  Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type MControls:MyToggleButton}}}" >
					</Path>
				</MControls:MyToggleButton.ContentChecked>
			</MControls:MyToggleButton>
			<!--播放-->
			<MControls:MyToggleButton Grid.Column="5"
									  Width="40" 
								      Height="40"
								      BorderType="Ellipse"
									  IsThreeState="True"
									  Margin="2 0"
                                      Command="{Binding BassEngine.PlayCommand,Source={x:Static tools:GlobalDataSingleton.Instance}}"
                                      CommandParameter="{Binding Source={RelativeSource Self},Path=IsChecked}">
				<MControls:MyToggleButton.IsChecked>
					<MultiBinding Converter="{StaticResource MutiBoolConverter}" 
								  ConverterParameter="1" 
								  Mode="OneWay">
						<MultiBinding.Bindings>
							<Binding Path="BassEngine.IsPlaying" Source="{x:Static tools:GlobalDataSingleton.Instance}" />
							<Binding Path="BassEngine.IsLoading" Source="{x:Static tools:GlobalDataSingleton.Instance}"/>
						</MultiBinding.Bindings>
					</MultiBinding>
				</MControls:MyToggleButton.IsChecked>
				<MControls:MyToggleButton.Content>
					<Label Background="Transparent" ToolTip="播放">
						<Path Data="{Binding [play], Source={x:Static MControls:PathData.Instance}}" 
						      Style="{StaticResource PathStyle}"
						      Margin="5 0 0 0"
						      Width="20" Height="20"
						      Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type MControls:MyToggleButton}}}" >
						</Path>
					</Label>
				</MControls:MyToggleButton.Content>
				<MControls:MyToggleButton.ContentChecked>
					<Label Background="Transparent" ToolTip="暂停">
						<Path Data="{Binding [pause], Source={x:Static MControls:PathData.Instance}}"
							  Style="{StaticResource PathStyle}"
							  Width="15" Height="20"
							  Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type MControls:MyToggleButton}}}" >
						</Path>
					</Label>
				</MControls:MyToggleButton.ContentChecked>
				<MControls:MyToggleButton.ContentThreeState>
					<Controls:ProgressRing IsActive="True"
										   Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type MControls:MyToggleButton}}}"
										   Width="30"
										   Height="30"/>
				</MControls:MyToggleButton.ContentThreeState>
			</MControls:MyToggleButton>
			<!--下一首-->
			<MControls:MyToggleButton Grid.Column="6"
									  Width="30" 
								      Height="30"
									  Margin="2 0"
								      BorderType="Ellipse"
									  ToolTip="下一首"
									  Command="{Binding NextCommand,Source={x:Static tools:CommandSingleton.Instance}}">
				<MControls:MyToggleButton.Content>
					<Path Data="{Binding [next], Source={x:Static MControls:PathData.Instance}}" 
						  Style="{StaticResource PathStyle}"
						  Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type MControls:MyToggleButton}}}" >
					</Path>
				</MControls:MyToggleButton.Content>
				<MControls:MyToggleButton.ContentChecked>
					<Path Data="{Binding [next], Source={x:Static MControls:PathData.Instance}}"
						  Style="{StaticResource PathStyle}"
						  Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type MControls:MyToggleButton}}}" >
					</Path>
				</MControls:MyToggleButton.ContentChecked>
			</MControls:MyToggleButton>
			<!--播放模式-->
			<MControls:MyToggleButton Grid.Column="7"
									  Width="30" 
								      Height="30"
								      BorderType="Ellipse"
									  IsThreeState="True"
									  Margin="2 0"
									  IsChecked="{Binding PlayMode,Source={x:Static tools:GlobalDataSingleton.Instance}}">
				<MControls:MyToggleButton.Content>
					<Label Background="Transparent" ToolTip="顺序播放">
						<Path Data="{Binding [play_mode_1], Source={x:Static MControls:PathData.Instance}}"
							  Style="{StaticResource PathStyle}"
							  Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type MControls:MyToggleButton}}}" >
						</Path>
					</Label>
				</MControls:MyToggleButton.Content>
				<MControls:MyToggleButton.ContentChecked>
					<Label Background="Transparent" ToolTip="单曲循环">
						<Path Data="{Binding [play_mode_2], Source={x:Static MControls:PathData.Instance}}"
							  Style="{StaticResource PathStyle}"
							  Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type MControls:MyToggleButton}}}" >
						</Path>
					</Label>
				</MControls:MyToggleButton.ContentChecked>
				<MControls:MyToggleButton.ContentThreeState>
					<Label Background="Transparent" ToolTip="列表循环">
						<Path Data="{Binding [play_mode_3], Source={x:Static MControls:PathData.Instance}}"
						  Style="{StaticResource PathStyle}"
						  Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type MControls:MyToggleButton}}}" >
						</Path>
					</Label>
				</MControls:MyToggleButton.ContentThreeState>
			</MControls:MyToggleButton>
			<!--当前播放列表-->
			<MControls:MyToggleButton Grid.Column="8"
									  Width="30" 
								      Height="30"
									  Margin="2 0"
									  IsThreeState="True"
								      BorderType="Ellipse"
									  IsBackground="Visible"
									  ToolTip="播放列表"
									  IsChecked="{Binding IsShowListView,Source={x:Static tools:GlobalDataSingleton.Instance}}">
				<MControls:MyToggleButton.Content>
					<Path Data="{Binding [list_view], Source={x:Static MControls:PathData.Instance}}" 
						  Style="{StaticResource PathStyle}"
						  Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type MControls:MyToggleButton}}}" >
					</Path>
				</MControls:MyToggleButton.Content>
				<MControls:MyToggleButton.ContentChecked>
					<Path Data="{Binding [list_view], Source={x:Static MControls:PathData.Instance}}"
						  Style="{StaticResource PathStyle}"
						  Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type MControls:MyToggleButton}}}" >
					</Path>
				</MControls:MyToggleButton.ContentChecked>
				<MControls:MyToggleButton.ContentThreeState>
					<Controls:ProgressRing IsActive="True" />
				</MControls:MyToggleButton.ContentThreeState>
			</MControls:MyToggleButton>
		</Grid>
		
	</Grid>
	
</UserControl>
